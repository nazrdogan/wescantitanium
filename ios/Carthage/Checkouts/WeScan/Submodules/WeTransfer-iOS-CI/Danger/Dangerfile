ENV['SWIFTLINT_VERSION'] = '0.27.0'

require File.expand_path('../ext/git_swift_linter.rb', __FILE__)

gitswiftlinter = GitSwiftLinter.new(self)
gitswiftlinter.lint_files

# Check for warnings
json_file = 'build/reports/errors.json'
if File.file?(json_file)
  xcode_summary.ignored_files = 'Submodules/**'
  xcode_summary.inline_mode = true
  xcode_summary.report 'build/reports/errors.json'
end

# Show Code coverage report
# Expecting this Dangerfile to be in:
# `source/Submodules/WeTransfer-iOS-CI/Danger/`
begin
  xcov.report(
    scheme: ENV['SCHEME'],
    minimum_coverage_percentage: ENV['MINIMUM_COVERAGE_PERCENTAGE'].to_f || 75,
    only_project_targets: true,
    output_directory: 'xcov_output',
    source_directory: '../../../'
  )
rescue
  fail('Coverage creation failed')
end

# Run SwiftLint for source code and tests
swiftlint_source_config_file = File.join(
  Dir.pwd,
  'Submodules/WeTransfer-iOS-CI/SwiftLint',
  '.swiftlint-source.yml'
)
swiftlint_tests_config_file = File.join(
  Dir.pwd,
  'Submodules/WeTransfer-iOS-CI/SwiftLint',
  '.swiftlint-tests.yml'
)

swiftlint.verbose = true
swiftlint.config_file = swiftlint_source_config_file
swiftlint.lint_files inline_mode: true

swiftlint.verbose = true
swiftlint.config_file = swiftlint_tests_config_file
swiftlint.lint_files inline_mode: true